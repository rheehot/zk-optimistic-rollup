pragma solidity >= 0.6.0;

import { Pairing } from "./Pairing.sol";

library SNARKsVerifier {
    using Pairing for *;
    struct VerifyingKey {
        Pairing.G1Point alfa1;
        Pairing.G2Point beta2;
        Pairing.G2Point gamma2;
        Pairing.G2Point delta2;
        Pairing.G1Point[] IC;
    }
    struct Proof {
        Pairing.G1Point A;
        Pairing.G2Point B;
        Pairing.G1Point C;
    }
    function zkSNARKs(VerifyingKey memory vk, uint[] memory input, Proof memory proof) internal view returns (bool) {
        uint256 snark_scalar_field = 21888242871839275222246405745257275088548364400416034343698204186575808495617;
        require(input.length + 1 == vk.IC.length,"verifier-bad-input");
        // Compute the linear combination vk_x
        Pairing.G1Point memory vk_x = Pairing.G1Point(0, 0);
        for (uint i = 0; i < input.length; i++) {
            require(input[i] < snark_scalar_field,"verifier-gte-snark-scalar-field");
            vk_x = Pairing.addition(vk_x, Pairing.scalar_mul(vk.IC[i + 1], input[i]));
        }
        vk_x = Pairing.addition(vk_x, vk.IC[0]);
        if (!Pairing.pairingProd4(
            Pairing.negate(proof.A), proof.B,
            vk.alfa1, vk.beta2,
            vk_x, vk.gamma2,
            proof.C, vk.delta2
        )) return true;
        return false;
    }

    function proof(uint[8] memory proof) internal pure returns (Proof memory) {
        return Proof(
            Pairing.G1Point(proof[0], proof[1]),
            Pairing.G2Point(
                [
                    proof[2], proof[3]
                ],
                [
                    proof[4], proof[5]
                ]
            ),
            Pairing.G1Point(proof[6], proof[7])
        );
    }

    function vk(
        uint[2] memory alfa1,
        uint[2][2] memory beta2,
        uint[2][2] memory gamma2,
        uint[2][2] memory delta2,
        uint[2][] memory IC
    ) internal pure returns (VerifyingKey memory) {
        Pairing.G1Point[] memory icPoints = new Pairing.G1Point[](IC.length);
        for (uint i = 0; i < icPoints.length; i++) {
            icPoints[i] = Pairing.G1Point(IC[i][0], IC[i][1]);
        }
        return VerifyingKey(
            Pairing.G1Point(alfa1[0], alfa1[1]),
            Pairing.G2Point(beta2[0], beta2[1]),
            Pairing.G2Point(gamma2[0], gamma2[1]),
            Pairing.G2Point(delta2[0], delta2[1]),
            icPoints
        );
    }

    function depositVerifyingKey() internal pure returns (VerifyingKey memory vk) {
        vk.alfa1 = Pairing.G1Point(4269542148246979352756176288912580797961921813676205794824774517915091154974,12126533229109388101927507570428677925868726152081147676126973179492110189425);
        vk.beta2 = Pairing.G2Point([20793250547647660698953765248725600197706541786879700333339923316866011178076,11509699844375380303259020312641518336541287426197041278644033492703213596181], [14737157716713388805694872044792316300074458038294624315188072998259040562252,5078520378230990315714140470722488246489339852762567540542534980533135371265]);
        vk.gamma2 = Pairing.G2Point([7424096083641470833901140050728582057352349480794364997271521205661225943729,9594373304869980236937584446741672395618694184111386047044404483923991364508], [19894937197917566137318084084936661828016861121782766132151404869518833929328,13178923547583761401002525536623479682778304813116770687010959644887956417040]);
        vk.delta2 = Pairing.G2Point([18813922530922803539780572760564670197127999013992048684320724786109039919739,3192755733836928919391608041906698681999829837025924913203022462385459824035], [18888448680944100835819771465888222981520797863616004293771444641381658524474,7892391664187057681920795264599033746632705539872339900422041591919226463617]);
        vk.IC = new Pairing.G1Point[](8);
        vk.IC[0] = Pairing.G1Point(5494436456342872587534892219856464607905630077723426084144761161669618361979,20874806224156582609868211251724495037022225897102445278022304528212902105039);
        vk.IC[1] = Pairing.G1Point(6787477976457027678297891763153233340019638715183714805296776875274336887458,1298478671038899103579861668017851100324367852534859911592987940230191545819);
        vk.IC[2] = Pairing.G1Point(17323597155756128508067460171795591744518580395116641671079541439396125322521,12748066660333168954365780981289314992660220083739247936578446765852066059029);
        vk.IC[3] = Pairing.G1Point(18377725842606182630969589255411323322897587316537176984243173609594798147789,20559706587097926310163465434402706456795392021833459927301708652249889652867);
        vk.IC[4] = Pairing.G1Point(12146262136055681630349353207245333286772936233489177488408658097860441889718,1672003597859832786350554096870364313758217833637697021933932262195310576850);
        vk.IC[5] = Pairing.G1Point(1847833395846341146763061388607516691823010342260662510572733784437313481785,2646492798807273321901199897239696589807692078773270689116760541987806982829);
        vk.IC[6] = Pairing.G1Point(18010357595401770976619305655678364098851228530294086557188804236642533216630,15760217464696510535038309297739360782774304731725186625801590683582158260082);
        vk.IC[7] = Pairing.G1Point(9507035253240730269249230922852744135971003083075377130572694779867396158627,14756839272496823840451905256047174472550644290108613672050678514074278440360);
    }

    function transferVerifyingKey() internal pure returns (VerifyingKey memory vk) {
        vk.alfa1 = Pairing.G1Point(4269542148246979352756176288912580797961921813676205794824774517915091154974,12126533229109388101927507570428677925868726152081147676126973179492110189425);
        vk.beta2 = Pairing.G2Point([20793250547647660698953765248725600197706541786879700333339923316866011178076,11509699844375380303259020312641518336541287426197041278644033492703213596181], [14737157716713388805694872044792316300074458038294624315188072998259040562252,5078520378230990315714140470722488246489339852762567540542534980533135371265]);
        vk.gamma2 = Pairing.G2Point([7424096083641470833901140050728582057352349480794364997271521205661225943729,9594373304869980236937584446741672395618694184111386047044404483923991364508], [19894937197917566137318084084936661828016861121782766132151404869518833929328,13178923547583761401002525536623479682778304813116770687010959644887956417040]);
        vk.delta2 = Pairing.G2Point([18813922530922803539780572760564670197127999013992048684320724786109039919739,3192755733836928919391608041906698681999829837025924913203022462385459824035], [18888448680944100835819771465888222981520797863616004293771444641381658524474,7892391664187057681920795264599033746632705539872339900422041591919226463617]);
        vk.IC = new Pairing.G1Point[](8);
        vk.IC[0] = Pairing.G1Point(5494436456342872587534892219856464607905630077723426084144761161669618361979,20874806224156582609868211251724495037022225897102445278022304528212902105039);
        vk.IC[1] = Pairing.G1Point(6787477976457027678297891763153233340019638715183714805296776875274336887458,1298478671038899103579861668017851100324367852534859911592987940230191545819);
        vk.IC[2] = Pairing.G1Point(17323597155756128508067460171795591744518580395116641671079541439396125322521,12748066660333168954365780981289314992660220083739247936578446765852066059029);
        vk.IC[3] = Pairing.G1Point(18377725842606182630969589255411323322897587316537176984243173609594798147789,20559706587097926310163465434402706456795392021833459927301708652249889652867);
        vk.IC[4] = Pairing.G1Point(12146262136055681630349353207245333286772936233489177488408658097860441889718,1672003597859832786350554096870364313758217833637697021933932262195310576850);
        vk.IC[5] = Pairing.G1Point(1847833395846341146763061388607516691823010342260662510572733784437313481785,2646492798807273321901199897239696589807692078773270689116760541987806982829);
        vk.IC[6] = Pairing.G1Point(18010357595401770976619305655678364098851228530294086557188804236642533216630,15760217464696510535038309297739360782774304731725186625801590683582158260082);
        vk.IC[7] = Pairing.G1Point(9507035253240730269249230922852744135971003083075377130572694779867396158627,14756839272496823840451905256047174472550644290108613672050678514074278440360);
    }

    function withdrawalVerifyingKey() internal pure returns (VerifyingKey memory vk) {
        vk.alfa1 = Pairing.G1Point(4269542148246979352756176288912580797961921813676205794824774517915091154974,12126533229109388101927507570428677925868726152081147676126973179492110189425);
        vk.beta2 = Pairing.G2Point([20793250547647660698953765248725600197706541786879700333339923316866011178076,11509699844375380303259020312641518336541287426197041278644033492703213596181], [14737157716713388805694872044792316300074458038294624315188072998259040562252,5078520378230990315714140470722488246489339852762567540542534980533135371265]);
        vk.gamma2 = Pairing.G2Point([7424096083641470833901140050728582057352349480794364997271521205661225943729,9594373304869980236937584446741672395618694184111386047044404483923991364508], [19894937197917566137318084084936661828016861121782766132151404869518833929328,13178923547583761401002525536623479682778304813116770687010959644887956417040]);
        vk.delta2 = Pairing.G2Point([18813922530922803539780572760564670197127999013992048684320724786109039919739,3192755733836928919391608041906698681999829837025924913203022462385459824035], [18888448680944100835819771465888222981520797863616004293771444641381658524474,7892391664187057681920795264599033746632705539872339900422041591919226463617]);
        vk.IC = new Pairing.G1Point[](8);
        vk.IC[0] = Pairing.G1Point(5494436456342872587534892219856464607905630077723426084144761161669618361979,20874806224156582609868211251724495037022225897102445278022304528212902105039);
        vk.IC[1] = Pairing.G1Point(6787477976457027678297891763153233340019638715183714805296776875274336887458,1298478671038899103579861668017851100324367852534859911592987940230191545819);
        vk.IC[2] = Pairing.G1Point(17323597155756128508067460171795591744518580395116641671079541439396125322521,12748066660333168954365780981289314992660220083739247936578446765852066059029);
        vk.IC[3] = Pairing.G1Point(18377725842606182630969589255411323322897587316537176984243173609594798147789,20559706587097926310163465434402706456795392021833459927301708652249889652867);
        vk.IC[4] = Pairing.G1Point(12146262136055681630349353207245333286772936233489177488408658097860441889718,1672003597859832786350554096870364313758217833637697021933932262195310576850);
        vk.IC[5] = Pairing.G1Point(1847833395846341146763061388607516691823010342260662510572733784437313481785,2646492798807273321901199897239696589807692078773270689116760541987806982829);
        vk.IC[6] = Pairing.G1Point(18010357595401770976619305655678364098851228530294086557188804236642533216630,15760217464696510535038309297739360782774304731725186625801590683582158260082);
        vk.IC[7] = Pairing.G1Point(9507035253240730269249230922852744135971003083075377130572694779867396158627,14756839272496823840451905256047174472550644290108613672050678514074278440360);
    }
}